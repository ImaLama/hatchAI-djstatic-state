---
# ==== TaskSpec METADATA (edit only the right-hand values) =====
id: 011-TS-2025-08-19-STATE-TRANSITION-VALIDATION
title: Implement state transition validation            # "Add sharded event dir"
created: 2025-08-19-16-11                   # creation datetime
updated: 2025-08-19-16-11                   # last update datetime
sprint: S4                                  # S4, S5, …
parent_featspec: 003-FS-2025-08-19-STATE-VALIDATION-HISTORY  # Required parent feature
type: feature                               # fix|feature|test|refactor|docs|integration
loc_cap: 200                                # net LoC (adds-deletes) - auto-set by type
coverage_cap: 80                            # % required by testing
depends_on: []                              # ["NNN-TS-...", ...]
# =============================================================
---

## 1  Context
Implements state transition validation for the agent state management system as part of the State Management Enhancement (003-FS-2025-08-19-STATE-VALIDATION-HISTORY). This addresses the critical need to prevent invalid state transitions that could corrupt agent workflows.

## 2  Objectives (acceptance criteria)
List **observable, testable** outcomes. Use MUST/SHOULD/MUST NOT keywords.

| # | Acceptance Test | Type | File/Command | Execution Evidence Required |
|---|-----------------|------|--------------|----------------------------|
| 1 | State machine MUST enforce valid transitions (idle→busy→done, idle→error) | unit | state_validator_test.sh | Show all valid transitions pass |
| 2 | Invalid transitions MUST be rejected with clear error messages | unit | state_validator_test.sh | Show rejection messages |
| 3 | Validation MUST maintain thread-safe operations with file locking | integration | concurrent_test.sh | Show no race conditions |
| 4 | Performance overhead MUST be < 10ms per state change | perf | perf_test.sh | Show timing measurements |
| 5 | MUST support configurable transition rules via JSON config | unit | config_test.sh | Show rule loading works |
| 6 | MUST integrate with existing pub/sub for validation events | integration | pubsub_test.sh | Show events published |

## 3  Non-Goals / Anti-Goals
• Will NOT modify existing agent_states.json structure
• Will NOT break backward compatibility with existing interfaces
• Will NOT implement complex state machine DSL (keep it simple)
• Will NOT handle state recovery/rollback (separate concern)

## 4  Design Constraints
• Keep validation logic ≤ 150 LoC total
• Use existing JSON file locking mechanism
• Maintain compatibility with bash/Node.js/VSCode interfaces
• Follow existing pub/sub patterns in codebase
• Must integrate cleanly with parent FeatSpec: 003-FS-2025-08-19-STATE-VALIDATION-HISTORY

## 5  Implementation Checklist (Factory)
- [ ] Add failing tests for each acceptance criterion
- [ ] Implement code until tests pass & linting clean
- [ ] Update parent FeatSpec state tracking
- [ ] Commit with trailer `TaskSpec: {{id}} status=qa`

## 6  QA Checklist
- [ ] Review test coverage & LoC cap
- [ ] Compare code vs Architecture-Implementation Alignment Matrix
- [ ] Verify integration with parent FeatSpec
- [ ] If pass, commit trailer `TaskSpec: {{id}} status=done`

## 7  Post-Merge Tasks
Update parent FeatSpec state, close related issues.